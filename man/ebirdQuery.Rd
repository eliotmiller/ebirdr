% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ebirdQuery.R
\name{ebirdQuery}
\alias{ebirdQuery}
\title{Directly query the eBird database}
\usage{
ebirdQuery(connection, type, query.list, write.wd)
}
\arguments{
\item{connection}{The result of a properly formatted object from estConn().}

\item{type}{One of either "sp", "absences", or "all.spp". If set to sp, then will query
based on six-letter eBird codes. If set to "absences" or "all.spp", then will query on
SUBNATIONAL1_CODEs.}

\item{query.list}{A list of things to query, where the type of thing is defined by the
type argument. In general, these are lists of character vectors, where the name of the
element in that list defines the name of the csv file into which the records will be
saved, and the elements in the character vector define what will be queried. There is
some chance the underlying query functions are stupidly written, e.g. "absences"
might actually just need a character vector, not in a list. Requires some checking,
Eliot currently forgets how he left things.}

\item{write.wd}{The path to the write working directory. Queried data will be saved
here as csv files.}
}
\value{
A list of character vectors of unique SUBNATIONAL1_CODEs that each species
occurs in.
}
\description{
Function to query the eBird database via SQL commands.
}
\details{
This function is only useful if you have permission to run it. Lots of room
to improve the possible types of queries. A temporary solution is to write
specialized queries and add these to the utils.R function, then modify the possible
inputs to this function. A more general long-term solution would allow people to input
SQL queries directly into this function. Would be particularly smart to institute some
sanity checks to said SQL queries if we went that route.
}
\examples{
#not run
#results <- readIn()
#summ <- sesIndiv(results)
#examp <- nullPerformance(summ)
}
\references{
Team eBird.
}

