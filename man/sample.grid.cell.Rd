% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample.grid.cell.R
\name{sample.grid.cell}
\alias{sample.grid.cell}
\title{Function to spatially sample points}
\usage{
sample.grid.cell(xxx, yyy, xlim = c(NA, NA), ylim = c(NA, NA), nx, ny,
  jitter = FALSE, size, replace = FALSE)
}
\arguments{
\item{xxx}{Vector of longitude or E-W coordinates.}

\item{yyy}{Vector of latitide or N-S coordinates.}

\item{xlim}{Together xlim and ylim define a bounding box within which lookup occurs.
I.e. all (xxx, yyy) pairs outside of this box are ignored.}

\item{ylim}{Together xlim and ylim define a bounding box within which lookup occurs.
I.e. all (xxx, yyy) pairs outside of this box are ignored.}

\item{nx}{Number of grid cells in x direction.}

\item{ny}{Number of grid cells in y direction.}

\item{jitter}{Defaults to FALSE. Set to TRUE to randomize grid location.}

\item{size}{Maximum number of points per cell to sample}

\item{replace}{Defaults to FALSE. Set to TRUE to sample with replacement.}
}
\value{
Index vector of selected locations.
}
\description{
Spatially thin eBird records based on a user-defined grid.
}
\details{
This function generates a stratified sample over a regular grid of strata, 
i.e. grid cells. It is relatively efficient computationally speaking. The sample()
function cannot take a sample larger than the population (in a cell) when
'replace = FALSE' If 'replace = FALSE' and the size parameter is larger than the 
cell populatuion size this function passes back a vector of length size, 
but it will contain only as many unique points in the cell
and the rest of the entries will be NA's. Note that the arguments in this
function are currently named things that already mean something in base R. We
may want to change that.
}
\examples{
#Generate Random Points over 2D field 
nnn <- 1000
xxx <- runif(nnn, 0, 10)
yyy <- runif(nnn, 0, 10)
par(cex = 0.5)
plot(xxx, yyy, 
 xlim = c(-1,11), 
 ylim = c(-1,11), 
 pch=20, 
 col="red", 
 cex=0.5)
sgc <- sample.grid.cell(
 xxx, 
 yyy, 
 xlim = c(-1,3), 
 ylim = c(3,6),
 nx = 5, 
 ny = 2, 
 jitter = TRUE, 
 size = 1, 
 replace = FALSE ) 
length(sgc$sample.index)
sum(!is.na(sgc$sample.index))
points(
 xxx[!is.na(sgc$cell.number)], 
 yyy[!is.na(sgc$cell.number)], 
 col = "blue", 
 pch = 20, 
 cex = 0.5)  
points(xxx[sgc$sample.index], yyy[sgc$sample.index], pch=20, cex=1, col="green")

# Reconstruct the Grid that was used
for (iii in 1:(sgc$nx+1))
 lines( rep(sgc$bb[1,1] + (iii-1)*sgc$xwidth, 2), range(sgc$bb[,"yyy"]), col="grey")   
for (iii in 1:(sgc$ny+1))
 lines( range(sgc$bb[,"xxx"]), rep(sgc$bb[1,2] + (iii-1)*sgc$ywidth, 2), , col="grey")   

table(sgc$cell.number)
length(table(sgc$cell.number))
sort(unique(sgc$sample.index))
sort(unique(c(1:length(xxx))[!is.na(sgc$cell.number)]))
}
\references{
Team eBird. Daniel Fink.
}
